apiVersion: datasance.com/v3
kind: ControlPlane
metadata:
  name: pot
spec:
  replicas:
    controller: 2
  database:
    provider:
    user: 
    host: 
    port: 
    password: 
    databaseName: 
  auth:
    url: 
    realm: 
    realmKey: 
    ssl: 
    controllerClient: 
    controllerSecret: 
    viewerClient: 
  images:
    pullSecret: 
    controller: 
    portManager: 
    proxy: 
    router: 
  services:
    controller:
      type:  # LoadBalancer / ClusterIP / Node Port .. If it is Cluster IP ingress for Controller need to be defined
      annotations: # if type is LoadBalancer user can define annotations in order to map which IP pool they would like to assign for the service
        #service.beta.kubernetes.io/azure-load-balancer-internal: "true"
    proxy:
      type:  
      annotations: # if type is LoadBalancer user can define annotations in order to map which IP pool they would like to assign for the service
        #service.beta.kubernetes.io/azure-load-balancer-internal: "true"
    router:
      type:  
      annotations: # if type is LoadBalancer user can define annotations in order to map which IP pool they would like to assign for the service
        #service.beta.kubernetes.io/azure-load-balancer-internal: "true"
  controller:
    pidBaseDir: ""
    ecnViewerPort: 0
    ecnViewerUrl: 
    https: # true or false  ..default is false
    secretName: #name of secret it has to be same with the one that defined in the controller ingress struct
  ingresses:
    controller:
      annotations:
        # cert-manager.io/cluster-issuer: letsencrypt
        # nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
        # nginx.ingress.kubernetes.io/backend-protocol: "https"
      ingressClassName: 
      host: 
      secretName: 
    router:
      address: 
      messagePort: 5672
      interiorPort: 55672
      edgePort: 45672
    httpProxy:
      address:
    tcpProxy:
      address: 
status:
  conditions:
    - lastTransitionTime: "2022-04-10T22:44:09Z"
      message: ""
      reason: "initial_status"
      status: "True"
      type: "deploying"

